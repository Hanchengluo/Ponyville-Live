<?
$title = 'System Administration';
$manual = true;

$this->assets->collection('custom_js')
    ->addJs('//cdn.socket.io/socket.io-1.2.1.js', false)
    ->addJs('//code.highcharts.com/highcharts.js', false)
    ->addJs('//code.highcharts.com/highcharts-more.js', false)
    ->addJs('//code.highcharts.com/modules/exporting.js', false)
    ->addJs('vendor/moment/moment.js');

$skin = \PVL\Customization::get('theme');
if ($skin == "dark")
    $this->assets->collection('custom_js')->addJs('js/highcharts/dark-blue.js');
?>

<div class="row">
    <div class="col-md-3">
        <div class="well">
            <ul class="nav nav-list">
                <li class="nav-header">Manage Content</li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'blocks')) ?>"><i class="icon-list-alt"></i> Content Blocks</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'artists')) ?>"><i class="icon-star"></i> Artist Directory</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'songs')) ?>"><i class="icon-music"></i> Song Directory</a></li>

                <li class="nav-header">Manage PVL Records</li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'stations')) ?>"><i class="icon-volume-up"></i> Radio Stations &amp; Video Channels</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'podcasts')) ?>"><i class="icon-rss"></i> Podcasts</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'rotators')) ?>"><i class="icon-refresh"></i> Rotating Banners</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'affiliates')) ?>"><i class="icon-group"></i> Affiliates</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'conventions')) ?>"><i class="icon-flag"></i> Conventions</a></li>

                <li class="nav-header">Network Statistics</li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'songs', 'action' => 'votes')) ?>"><i class="icon-sort-by-order"></i> Top Songs for Week</a></li>

                <li class="nav-header">Manage Core System</li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'api')) ?>"><i class="icon-puzzle-piece"></i> API Usage</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'users')) ?>"><i class="icon-user"></i> User Accounts</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'permissions')) ?>"><i class="icon-key"></i> Roles &amp; Permissions</a></li>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'admin', 'controller' => 'settings')) ?>"><i class="icon-cog"></i> System Settings</a></li>

                <li class="nav-header">Station Centers</li>
            <? foreach($stations as $station): ?>
                <li><a href="<?=$this->viewHelper->route(array('module' => 'stations', 'action' => 'index', 'station' => $station->id)) ?>"><i class="<?=$station->getCategoryIcon() ?>"></i> <?=$station->name ?></a></li>
            <? endforeach; ?>
            </ul>
        </div>
    </div>
    <div class="col-md-9">
        <div id="network_listeners_by_day" style="height: 250px;"></div>
        <div id="station_listeners_by_day" style="height: 450px;"></div>

        <h2>Synchronization Status</h2>
        <div class="well">
            <div class="row">
            <? foreach($sync_times as $sync_key => $sync_info): ?>
                <div class="col-md-3">
                    <h4><?=$sync_info['name'] ?></h4>
                    <p><?=date('F j, Y g:ia', $sync_info['latest']) ?><br><small><?=$sync_info['diff_text'] ?> ago</small></p>

                    <div class="buttons">
                        <?=$this->viewHelper->button(array(
                            'type'      => 'small',
                            'href'      => $this->viewHelper->routeFromHere(array('action' => 'sync', 'type' => $sync_key)),
                            'text'      => 'Run Manually',
                            'target'    => '_blank',
                        )) ?>
                    </div>

                    <p><small>
                        <?=implode('<br>', $sync_info['contents']) ?>
                    </small></p>
                </div>
            <? endforeach; ?>
            </div>
        </div>

        <h2>Real-Time Statistics</h2>
        <div class="well">
            <div class="row">
                <div class="col-md-3">
                    <h4>PVLNode Service</h4>
                    <dl>
                        <dt><?=(int)$pvlnode_stats['clients'] ?></dt>
                        <dd>Active Connections</dd>

                        <dt><?=\DF\Utilities::timeDifferenceText(time(), $pvlnode_stats['latest_update']) ?></dt>
                        <dd>Since Last Update</dd>
                    </dl>
                </div>
                <div class="col-md-9">
                    <h4>Websocket Updates</h4>
                    <div id="websocket_updates" style="height: 150px; overflow-y: scroll; overflow-x: hidden;">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
var pvlnode_remote_url = '<?=$this->config->apis->pvlnode_remote_url ?>';
var pvlnode_remote_path = '<?=$this->config->apis->pvlnode_remote_path ?>';

$(function() {
    socket = io(pvlnode_remote_url, {path: pvlnode_remote_path});

    socket.on('connect', function(){});
    socket.on('disconnect', function(){});

    socket.on('nowplaying', function(e) {
        console.log(e);
        pushPvlNodeUpdate('Nowplaying updated.');
    });

    socket.on('schedule.event_upcoming', function(e) {
        console.log(e);

        var station_name = e.station.name;
        var station_image = e.station.image_url;

        var event_name = e.event.title;
        var event_url = e.event.web_url;

        pushPvlNodeUpdate('Upcoming event: '+event_name+' on '+station_name);
    });

    socket.on('podcast.new_episode', function(e) {
        console.log(e);

        var podcast_name = e.podcast.name;
        var podcast_image = e.podcast.image_url;

        var episode_name = e.episode.title;
        var episode_url = e.episode.web_url;

        pushPvlNodeUpdate('New podcast episode: '+podcast_name+' - <a href="'+episode_url+'" target="_blank">'+episode_name+'</a>');
    });
});

function pushPvlNodeUpdate(update_text) {

    var update_time = moment().format("MMM Do, h:mm:ss a");
    var update_html = '<div><b>'+update_time+'</b>: '+update_text;

    $('#websocket_updates').prepend(update_html);
}
</script>
<script type="text/javascript">
$(function () {
    Highcharts.setOptions({
        global: {
            useUTC: false
        }
    });
        
    $('#network_listeners_by_day').highcharts({
        chart: { zoomType: 'x' },
        title: { text: 'PVL Network Traffic by Day' },
        xAxis: {
            type: 'datetime',
            labels: {
                formatter: function () {
                    return Highcharts.dateFormat('%a %d %b', this.value);
                },
                dateTimeLabelFormats: {
                    minute: '%H:%M',
                    hour: '%H:%M',
                    day: '%e. %b',
                    week: '%e. %b',
                    month: '%b \'%y',
                    year: '%Y'
                }
            }
        },
        plotOptions: {
            spline: {
                marker: { enabled: false }
            }
        },
        yAxis: {
            title: { text: 'Listeners' },
            min: 0,
            max: 500
        },
        tooltip: {
            crosshairs: true,
            shared: true,
            xDateFormat: '%Y-%m-%d'
        },
        colors: [
            '#AEE1FF',
            '#0091E5',
            '#FFA6A6',
            '#8C0000'
        ],
        
        series: <?=$network_metrics ?>
    });

    $('#station_listeners_by_day').highcharts({
        chart: { zoomType: 'x' },
        title: { text: 'PVL Station Traffic by Day' },
        xAxis: {
            type: 'datetime',
            labels: {
                formatter: function () {
                    return Highcharts.dateFormat('%a %d %b', this.value);
                },
                dateTimeLabelFormats: {
                    minute: '%H:%M',
                    hour: '%H:%M',
                    day: '%e. %b',
                    week: '%e. %b',
                    month: '%b \'%y',
                    year: '%Y'
                }
            }
        },
        plotOptions: {
            spline: {
                lineWidth: 1,
                marker: { enabled: false },
                shadow: false,
                states: {
                    hover: {
                        lineWidth: 3
                    }
                },
                threshold: null
            }
        },
        yAxis: {
            title: { text: 'Listeners' },
            min: 0,
            max: 100
        },
        tooltip: {
            crosshairs: true,
            xDateFormat: '%Y-%m-%d'
        },
        
        series: <?=$station_metrics ?>
    });
});
</script>